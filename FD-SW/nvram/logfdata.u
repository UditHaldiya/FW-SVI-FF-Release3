#MP If 0 ;Tombstone header
/*
Copyright 2006-2007 by Dresser, Inc., as an unpublished trade secret.  All rights reserved.
This document and all information herein are the property of Dresser, Inc.
It and its contents are  confidential and have been provided as a part of
a confidential relationship.  As such, no part of it may be made public,
decompiled, reverse engineered or copied and it is subject to return upon
demand.
*/
/**
    \file logfdata.u
    \brief Generator of the project-dependent log file configuration table

    This file yields logfdata.h and logfdata.c with definitions of log file
    system configuration

    Defines string HARTBasename as a source of knowledge about HART commands

    CPU: Any

    OWNER: AK
    $Archive: /MNCB/Dev/FIRMWARE/nvram/logfdata.u $
    $Date: 5/21/07 11:51a $
    $Revision: 4 $
    $Author: Arkkhasin $

    \ingroup logfile
*/
/* (Optional) $History: logfdata.u $
 *
 * *****************  Version 4  *****************
 * User: Arkkhasin    Date: 5/21/07    Time: 11:51a
 * Updated in $/MNCB/Dev/FIRMWARE/nvram
 * New tombstone header
*/

#MP Endif ;Tombstone header
#MP Include "projectdef.inc"
#MP Include "logfileconf.inc"

#MP If 0 ;comment
/* The number of extents (= the number of extent types) to hold a log of a given 'size'
is simply the ordinal number i of the i-th least extent size that is as large as 'size'
*/
/* The base address of segment type 1 is 0;
The base address of segment type i+1 is the base address of segment i, plus size of segment i+1 times
the number of segments of type i+1.
*/
#MP Endif ;comment

#MP Expand SetLogfConfigOption(LogfConfig_Tables)
#MP Setstr BaseFileName = "logfdata"
#MP Include "logfiledef.inc"

//Ensures we are within FRAM limits (assert area are on volume 0 only, and accounting for log files area)
CONST_ASSERT((NVMEMSTART+NVMEM_REGULAR_SIZE_Vol0+EXTENTS_TOTAL_MEMORY_PROJ + NVRAM_PARTITION_REMAP_SIZE)<=ASSERT_DATA);

// project-dependent log file data area base address
const u16 logf_AreaBase = (NVMEMSTART + NVM_PREWRITE_ADDR) - EXTENTS_TOTAL_MEMORY_PROJ;

