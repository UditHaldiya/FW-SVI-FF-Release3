#MP Setstr basename = uAutoLine
#MP Include "ustd.inc"
#MP dummy(".h")
#MP Setstr output = basename ".c"
#MP Export (0) output
/*
Copyright 2014-2016 by Dresser, Inc., as an unpublished trade secret.  All rights reserved.
This document and all information herein are the property of Dresser, Inc.
It and its contents are  confidential and have been provided as a part of
a confidential relationship.  As such, no part of it may be made public,
decompiled, reverse engineered or copied and it is subject to return upon
demand.
*/
/**
    \file #mp%sbasename.c
    \brief project-dependent tables of fault properties and properties' masks

    Do not modify manually.

    CPU: Any

    OWNER: #mp%sbasename.u
*/
#include <softing_base.h>
#include "mnfault2alert.h"
#include "ptbcustomsubx.h"
#MP Macro StartFaultAlarmDef

//Verify compatibility with Softing sample code
CONST_ASSERT(FD_NO_RECOMM_ACT==RECOM_ACT_NONE);
CONST_ASSERT(FD_RECOMM_ACT_TB==RECOM_ACT_MODE);
CONST_ASSERT(FD_RECOMM_ACT_UNKNOWN==RECOM_ACT_UNKNOWN);
CONST_ASSERT(FD_NO_HART_COMMUNICATION==RECOM_ACT_IPC);

const MnFaultAlarmMap_t MnFaultAlarmMap[MAX_FAULT_NUMBER] = MN_ALLOW_INIT_ZERODEFAULT()
{
#MP Endm
#MP Macro FaultAlarmDef ;[1.fault_anchor, 2.block_err, 3.block_err_desc_1, 4.xd_error, 5.xd_error_dest, 6.FD_alert, 7.FD_recoom_action, 8.Prio
    [FAULT_#mp%n#1# - 1] =
    {
        .BlockError = #mp%s#2#,
        #MP
        #MP strcmp(#3#, "DESC_NONE")
        #MP flag = Ustrlen(#3#)
        #MP If flag==0 || strcmp>0
        .block_err_desc_1 = 0U, //no description
        #MP Else
            #MP toupper(#3#)
        .block_err_desc_1 = DESC_#mp%stoupper,
        #MP Endif
        #MP
        #MP If Ustrlen(#4#)==0 || Ustrlen(#5#)==0
        .xd_index = xdX_total, //by convention, no xd_error
        #MP Else
        .xd_index = xdX_#mp%s#5#,
            #MP toupper(#4#)
        .xd_error = #mp%stoupper,
        #MP Endif
        #MP
        #MP strcmp(#6#, "ALERT_NONE")
        #MP If strcmp>=0 ;match found
        .BlockAlertX=ALERT_NONE,
        #MP Else
        .BlockAlertX=ALERT_INDEX(#mp%s#6#)+1U,
        #MP Endif
        .recommended_action=#mp%s#7#,
        .priority = #mp%s#8#,
    },
#MP Endm
#MP Macro EndFaultAlramDef
};
#MP Endm

#MP Include "fault2alert.inc"
/* This line marks the end of the source */
