#MP If 0 ;Tombstone header
/*
Copyright 2016 by Dresser, Inc., as an unpublished trade secret.  All rights reserved.
This document and all information herein are the property of Dresser, Inc.
It and its contents are  confidential and have been provided as a part of
a confidential relationship.  As such, no part of it may be made public,
decompiled, reverse engineered or copied and it is subject to return upon
demand.
*/
/**
    \file ptbcustomsubx.u
    \brief Generator of symbolic sub-indices of Record DD types

    CPU: Any

    OWNER: AK

*/
#MP Endif ;Tombstone header
#MP
#MP Setstr basename = uAutoLine
#MP Include "ustd.inc"
#MP Include "gwtypes.inc"
#MP Include "paramstubs.inc"
#MP dummy(".c")
#MP
#MP Setstr outfile = {uJoin, basename, #@.h#}
#MP toupper[basename]
#MP Setstr guard = toupper "_H_"
                #MP
#MP Undef BeginStruct {MAC} ;redefine stub with content
#MP Macro BeginStruct ;(tag)
#MP Setstr StructTag {%n#1#}
#MP members = 0
#MP Endm
                #MP
#MP Undef StructMember {MAC} ;redefine stub with content
#MP Macro StructMember ;(type.unused, name, attrib0.opt, attrib_text0.opt, ...)
#MP members = members+1
#define PTB_SUBX_#mp%sStructTag#mp%n___#mp%n#2# (#mp%dmembers)
#MP For x=3, #0#
    #MP ;x is attrib, x+1 is a string value
    #MP y=x+1
#define #mp%sStructTag#mp%n_#mp%n#2##mp%n_#mp%n#x# (#mp%s#y#)
    #MP x=y
#MP Endfor
#MP Endm
                #MP
#MP Undef StructMemberLike {MAC} ;redefine stub with content
#MP Macro StructMemberLike ;(basename.unused, name)
#MP StructMember[[1:#0#]]
#MP Endm
                #MP
#MP Undef BeginEnumType {MAC}
#MP Macro BeginEnumType ;[basetype, name]
#MP; #ifndef DEFINED_ENUM_#mp%n#2#
#MP; #define DEFINED_ENUM_#mp%n#2#
#MP Ifdef No_C_code {NUM}
#if 0 //kludge for DD size mismatch
#MP Endif
enum
{
#MP Endm
#MP Undef DefineEnumValue {MAC}
#MP Macro DefineEnumValue ;[name, value, dd-text]
    #mp%n#1# = #mp%d#2#,
#MP Endm
#MP Undef EndEnumType {MAC} ;redefine stub with content
#MP Macro EndEnumType
};
#MP; #endif
#MP Ifdef No_C_code {NUM}
#endif //kludge for DD size mismatch
#MP Undef No_C_code {NUM}
#MP Endif
#MP Endm
                                #MP
#MP Undef BeginBitEnumType4 {MAC}
                #MP
#MP Undef BeginBitEnumType5 {MAC}
#MP Macro BeginBitEnumType5 ;[basetype, name]
        #MP BeginBitEnumType[[1:#0#]]
#MP Endm
                #MP
                #MP
#MP Undef BeginBitEnumType {MAC}
#MP Macro BeginBitEnumType ;[basetype, name]
#MP For pass=0,1
#MP If pass==0
enum
{
#MP Endif
#MP Endm
#MP Undef DefineBitEnumValue {MAC}
#MP Macro DefineBitEnumValue ;[name, value, dd-text]
#MP If pass==0
    #mp{%n#1#}_BIT = #mp%d#2#,
#MP Else
#MP mask = 1<<#2#
#define #mp{%n#1#} (1U<<#mp{%n#1#}_BIT) //(0x#mp{%Xmask}U)
#MP Endif
#MP Endm
#MP Undef EndBitEnumType {MAC} ;redefine stub with content
#MP Macro EndBitEnumType
#MP If pass==0
};
#MP Else
#MP Endfor
#MP Endif
#MP Endm
                #MP

#MP Export (0) outfile
#MP
/*
Copyright 2016 by Dresser, Inc., as an unpublished trade secret.  All rights reserved.
This document and all information herein are the property of Dresser, Inc.
It and its contents are  confidential and have been provided as a part of
a confidential relationship.  As such, no part of it may be made public,
decompiled, reverse engineered or copied and it is subject to return upon
demand.
*/
/**
    \file #mp%soutfile
    \brief  Symbolic sub-indices of Record DD types

    This file is created automatically from #mp%sbasename.u.
    DO NOT EDIT it by hand!!!

    CPU: Any

    OWNER: #mp%sbasename.u
*/
#ifndef #mp%sguard
#define #mp%sguard
// ------------- RB insert ---------------
#MP Include "rb_custom.inc"
// ----------- end RB insert -------------
#MP Include "ptb_custom.inc"
#endif //#mp%sguard
/* This line marks the end of the source */
#MP ; This line marks the end of the source
